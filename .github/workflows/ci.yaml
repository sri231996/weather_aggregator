name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"
      - "helm/**"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go 1.20
        uses: actions/setup-go@v4
        with:
          go-version: 1.20

      - name: Build Go app
        run: CGO_ENABLED=0 go build -o go-weather-app main.go

      - name: Test Go app
        run: CGO_ENABLED=0 go test ./...

  code-quality:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.20

    - name: Ensure Go module is initialized
      run: |
        if [ ! -f go.mod ]; then
          echo "Missing go.mod! Initializing..."
          go mod init weather_aggregator
        fi
        go mod tidy

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: v1.56.2
        args: ./...
    
  vulnerability-scan-code:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.22.0/trivy_0.22.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.22.0_Linux-64bit.deb

      - name: Run Trivy scan
        run: trivy fs --exit-code 1 --severity HIGH,CRITICAL .

  docker-push:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: srishtisrivastava100343/weather-aggregator:${{ github.run_id }}

  update-tag-in-helm-chart:
    runs-on: ubuntu-latest
    needs: docker-push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.TOKEN }}

      - name: Set up Helm
        uses: azure/setup-helm@v2

      - name: Update Helm chart
        run: |
          sed -i "s/tag: .*/tag: ${{ github.run_id }}/" helm/go-weather-app-chart/values.yaml

      - name: Commit and push changes
        run: |
          git config --global user.email "srishtisrivastava100@gmail.com"
          git config --global user.name "sri231996"
          git add helm/go-weather-app-chart/values.yaml
          git commit -m "Update tag in Helm chart"
          git push
